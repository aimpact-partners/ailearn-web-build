System.register(["@beyond-js/kernel@0.1.9/bundle","dexie@3.2.7","@beyond-js/events@0.0.7/events","@beyond-js/kernel@0.1.9/core"],function(t,e){"use strict";var r,s,a,n,i,o;return t({DatabaseManager:void 0,DBManager:void 0}),{setters:[function(e){r=e},function(e){s=e},function(e){a=e},function(e){n=e}],execute:function(){o=r.Bundle,(i=new o({module:{vspecifier:"@beyond-js/reactive@1.1.12/database"},type:"ts"},e.meta.url).package()).dependencies.update([["dexie",s],["@beyond-js/events/events",a],["@beyond-js/kernel/core",n]]),(o=new Map).set("./database",{hash:1160722982,creator:function(e,r){Object.defineProperty(r,"__esModule",{value:!0}),r.Database=void 0;var s=e("dexie"),t=e("@beyond-js/events/events"),a=e("@beyond-js/kernel/core");class n extends t.Events{#version=1;#db;get db(){return this.#db}#promise;#currentVersion;static#instance;#ready;#name;get ready(){return this.#ready}constructor(e,r){super(),this.#name=e,this.#version=r,this.create(),this.#promise=new a.PendingPromise,globalThis.db=this.#db}async create(){this.#db=new s.default(this.#name),this.#currentVersion=this.#db.version(this.#version)}#onReady=()=>{this.#ready=!0,this.#promise.resolve(),this.#promise=void 0};#onError=e=>{throw this.#promise.resolve(),this.#promise=void 0,new Error(e)};#nextVersion(){return this.#version++,this.#version}register=async s=>{Object.keys(s).forEach(e=>{var r=s[e].split(",");(r=new Set(r)).add("offline"),r.add("instanceId"),r.add("isDeleted"),r.add("isNew"),s[e]=Array.from(r).join(",")}),this.#currentVersion.stores(s);try{return await this.#db.open(),this.#db}catch(e){console.error("error registering",e)}}}r.Database=n}}),o.set("./index",{hash:1682080146,creator:function(e,r){Object.defineProperty(r,"__esModule",{value:!0}),r.DatabaseManager=r.DBManager=void 0;var s=e("dexie"),t=e("@beyond-js/events/events"),a=e("@beyond-js/kernel/core"),n=e("./database");class i extends t.Events{#promise;#ready;get ready(){return this.#ready}#db;get db(){return this.#db}#databases=new Map;constructor(){super();var e=new s.default("ReactiveDatabase");(this.#db=e).version(1).stores({schemas:"name, table, fields"}),e.open().then(this.#onFinished).catch(this.#onError)}#onFinished=()=>{this.trigger("loaded.reactive.database"),this.#promise&&this.#promise.resolve()};#onError=e=>{this.trigger("error"),console.error(e)};load(){return this.ready||this.#promise||(this.#promise=new a.PendingPromise,this.on("finished",()=>{this.#ready=!0,this.#promise.resolve(),this.#promise=void 0}),void this.on("error",()=>{this.#promise.reject(),this.#promise=void 0}))}async open(e){var r,s;if(e)return[r,s=1]=e.split("@"),this.#databases.has(r)?this.#databases.get(r):(s=new n.Database(r,s),this.#databases.set(r,s),s);throw new Error(`Identifier ${e} was not defined correctly`)}get=e=>this.open(e);async config(e,r){return(await this.open(e)).register(r)}}r.DatabaseManager=i,r.DBManager=new i}}),i.exports.descriptor=[{im:"./index",from:"DatabaseManager",name:"DatabaseManager"},{im:"./index",from:"DBManager",name:"DBManager"}],i.exports.process=function({require:e,prop:r,value:s}){!e&&"DatabaseManager"!==r||t("DatabaseManager",e?e("./index").DatabaseManager:s),!e&&"DBManager"!==r||t("DBManager",e?e("./index").DBManager:s)},t("__beyond_pkg",i),t("hmr",new function(){this.on=(e,r)=>i.hmr.on(e,r),this.off=(e,r)=>i.hmr.off(e,r)}),i.initialise(o)}}});