System.register(["@beyond-js/kernel@0.1.9/bundle","@beyond-js/kernel@0.1.9/core","@beyond-js/reactive@1.1.12/model"],function(r,e){"use strict";var i,t,s,o,n;return r("Recorder",void 0),{setters:[function(e){i=e},function(e){t=e},function(e){s=e}],execute:function(){n=i.Bundle,(o=new n({module:{vspecifier:"@bgroup/media-manager@1.0.0/recorder"},type:"ts"},e.meta.url).package()).dependencies.update([["@beyond-js/kernel/core",t],["@beyond-js/reactive/model",s]]),(n=new Map).set("./index",{hash:2765502814,creator:function(e,i){Object.defineProperty(i,"__esModule",{value:!0}),i.Recorder=void 0;var t=e("@beyond-js/kernel/core");class r extends e("@beyond-js/reactive/model").ReactiveModel{#initialised=!1;#source;#stream;#startTime;#initPromise;#stopPromise;#audioContext;#recordingPromise;#mediaRecorder;#chunks=[];get chunks(){return this.#chunks}#status;get status(){return this.#status}#recording=!1;get recording(){return this.#recording}#error;get error(){return this.#error}get valid(){return!this.#error}#audio;get audio(){return this.#audio}#analyser;get analyser(){return this.#analyser}#speechRecognition;#transcription="";get transcription(){return this.#transcription}async hasPermissions(){return navigator.permissions.query({name:"microphone"})}#promiseSpeech;#permissions;#permissionState;constructor(){super(),this.init()}async init(){this.#permissions=await navigator.permissions.query({name:"microphone"}),this.ready=!0,this.#permissionState=this.#permissions.state,this.#permissions.onchange=this.#onChangeStatus.bind(this)}#onChangeStatus(){this.#permissionState=this.#permissions.state,this.trigger("change")}getSpeechRecognition(){this.#speechRecognition=new webkitSpeechRecognition,this.#speechRecognition.lang="es-ES",this.#speechRecognition.continuous=!0,this.#speechRecognition.interimResults=!0,this.#promiseSpeech=new t.PendingPromise,this.#speechRecognition.onresult=i=>{let t="",r="";for(let e=i.resultIndex;e<i.results.length;++e)i.results[e].isFinal?(r+=i.results[e][0].transcript,this.#transcription=r,this.#promiseSpeech.resolve(this.#transcription)):t+=i.results[e][0].transcript},this.#speechRecognition.onerror=e=>console.error("error in transcription"),this.#speechRecognition.start()}#onDataAvailable=e=>{0!==e.data.size&&(this.#chunks.push(e.data),this.trigger("dataavailable"))};#startRecording=(e,i)=>{this.#mediaRecorder=new MediaRecorder(e),this.#stream=e,this.#audioContext=new(globalThis.AudioContext||globalThis.webkitAudioContext),this.#analyser=this.#audioContext.createAnalyser(),this.#source=this.#audioContext.createMediaStreamSource(e),i.analyser&&this.#source.connect(this.#analyser),i.speechRecognition&&"webkitSpeechRecognition"in globalThis&&this.getSpeechRecognition(),this.#mediaRecorder.addEventListener("dataavailable",this.#onDataAvailable)};async initialise(i={}){return this.#initPromise||(this.#initPromise=new t.PendingPromise,globalThis?.navigator.mediaDevices.getUserMedia({audio:!0}).then(e=>this.#startRecording(e,i)).catch(e=>{this.#error=e.message,this.#initPromise.reject()}).finally(()=>{this.#initialised=!0,this.#initPromise.resolve()})),this.#initPromise}record(i={analyser:!0}){try{if(!this.#recordingPromise){if(this.#recordingPromise=new t.PendingPromise,this.#recording)throw new Error("Wait for recorder to be stopped and transcription ready");this.#status="started",this.#recording=!0,this.trigger("change"),globalThis?.navigator.mediaDevices.getUserMedia({audio:!0}).then(async e=>{this.#startRecording(e,i),this.#recordingPromise.resolve(),this.#initialised=!0,this.#mediaRecorder?.start()}).catch(e=>{console.error(e),this.#error=e.message,this.#recordingPromise.reject()})}return this.#recordingPromise}catch(e){}}stopStream=()=>{this.#stream.getTracks().forEach(e=>e.stop())};stop(){if(this.#mediaRecorder){if(!this.#stopPromise){if(this.#stopPromise=new t.PendingPromise,!this.#recording)throw new Error("Recorder is not currently recording");this.#status="stopped";var e=()=>{this.#chunks=[],this.#recording=!1,this.#mediaRecorder.addEventListener("stop",async()=>{const e=new Blob(this.#chunks,{type:this.#mediaRecorder.mimeType});this.#audio=e;var i=()=>{this.#stopPromise.resolve(e),this.#stopPromise=void 0};this.#promiseSpeech?this.#promiseSpeech.then(i):this.#stopPromise&&i(),this.#recordingPromise&&(this.#recordingPromise.resolve(e),this.#recordingPromise=void 0),this.stopStream(),this.#mediaRecorder=void 0,this.#stream=void 0,this.#initPromise=void 0}),this.#mediaRecorder?.stop(),this.#speechRecognition?.stop(),this.trigger("change")};this.#initialised?e():this.record().then(e)}return this.#stopPromise}console.warn("this.#mediaRecorder no initialize")}}i.Recorder=r}}),n.set("./interface",{hash:939057662,creator:function(e,i){Object.defineProperty(i,"__esModule",{value:!0})}}),o.exports.descriptor=[{im:"./index",from:"Recorder",name:"Recorder"}],o.exports.process=function({require:e,prop:i,value:t}){!e&&"Recorder"!==i||r("Recorder",e?e("./index").Recorder:t)},r("__beyond_pkg",o),r("hmr",new function(){this.on=(e,i)=>o.hmr.on(e,i),this.off=(e,i)=>o.hmr.off(e,i)}),o.initialise(n)}}});