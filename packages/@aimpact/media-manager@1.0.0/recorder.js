System.register(["@beyond-js/kernel@0.1.9/bundle","@beyond-js/kernel@0.1.9/core","@beyond-js/reactive@1.1.12/model"],function(r,e){"use strict";var i,t,s,o,n;return r("Recorder",void 0),{setters:[function(e){i=e},function(e){t=e},function(e){s=e}],execute:function(){n=i.Bundle,(o=new n({module:{vspecifier:"@aimpact/media-manager@1.0.0/recorder"},type:"ts"},e.meta.url).package()).dependencies.update([["@beyond-js/kernel/core",t],["@beyond-js/reactive/model",s]]),(n=new Map).set("./index",{hash:2533696947,creator:function(e,i){Object.defineProperty(i,"__esModule",{value:!0}),i.Recorder=void 0;var t=e("@beyond-js/kernel/core");class r extends e("@beyond-js/reactive/model").ReactiveModel{#initialised=!1;#source;#stream;#startTime;#initPromise;#stopPromise;#audioContext;#recordingPromise;#mediaRecorder;#chunks=[];get chunks(){return this.#chunks}#status;get status(){return this.#status}#recording=!1;get recording(){return this.#recording}#error;get error(){return this.#error}get valid(){return!this.#error}#audio;get audio(){return this.#audio}#analyser;get analyser(){return this.#analyser}#speechRecognition;#transcription="";get transcription(){return this.#transcription}#promiseSpeech;#permissions;#permissionObserver;#permissionState;constructor(){super(),this.init()}async hasPermissions(){try{return await navigator.mediaDevices.getUserMedia({audio:!0}),!0}catch(e){return console.log("aja"),this.#error=e,!1}}async init(){try{var e=await navigator.permissions.query({name:"microphone"});this.#permissions="granted"===e.state,this.#permissionObserver=e,this.#permissionState=e.state,e.onchange=this.#onChangeStatus.bind(this)}catch(e){}finally{this.ready=!0}}#onChangeStatus(){this.#permissionState=this.#permissionObserver.state,this.trigger("change")}getSpeechRecognition(){this.#speechRecognition=new webkitSpeechRecognition,this.#speechRecognition.lang="es-ES",this.#speechRecognition.continuous=!0,this.#speechRecognition.interimResults=!0,this.#promiseSpeech=new t.PendingPromise,this.#speechRecognition.onresult=i=>{let t="",r="";for(let e=i.resultIndex;e<i.results.length;++e)i.results[e].isFinal?(r+=i.results[e][0].transcript,this.#transcription=r,this.#promiseSpeech.resolve(this.#transcription)):t+=i.results[e][0].transcript},this.#speechRecognition.onerror=e=>console.error("error in transcription"),this.#speechRecognition.start()}#onDataAvailable=e=>{0!==e.data.size&&(this.#chunks.push(e.data),this.trigger("dataavailable"))};#startRecording=(e,i)=>{this.#mediaRecorder=new MediaRecorder(e),this.#stream=e,this.#audioContext=new(globalThis.AudioContext||globalThis.webkitAudioContext),this.#analyser=this.#audioContext.createAnalyser(),this.#source=this.#audioContext.createMediaStreamSource(e),i.analyser&&this.#source.connect(this.#analyser),i.speechRecognition&&"webkitSpeechRecognition"in globalThis&&this.getSpeechRecognition(),this.#mediaRecorder.addEventListener("dataavailable",this.#onDataAvailable)};async initialise(i={}){return this.#initPromise||(this.#initPromise=new t.PendingPromise,globalThis?.navigator.mediaDevices.getUserMedia({audio:!0}).then(e=>this.#startRecording(e,i)).catch(e=>{this.#error=e.message,this.#initPromise.reject()}).finally(()=>{this.#initialised=!0,this.#initPromise.resolve()})),this.#initPromise}record(i={analyser:!0}){try{if(!this.#recordingPromise){if(this.#recordingPromise=new t.PendingPromise,this.#recording)throw new Error("Wait for recorder to be stopped and transcription ready");this.#status="started",this.#recording=!0,this.trigger("change"),globalThis?.navigator.mediaDevices.getUserMedia({audio:!0}).then(async e=>{this.#startRecording(e,i),this.#recordingPromise.resolve(),this.#initialised=!0,this.#mediaRecorder?.start()}).catch(e=>{console.error(e),this.#error=e.message,this.#recordingPromise.reject()})}return this.#recordingPromise}catch(e){}}stopStream=()=>{this.#stream.getTracks().forEach(e=>e.stop())};stop(){if(this.#mediaRecorder){if(!this.#stopPromise){if(this.#stopPromise=new t.PendingPromise,!this.#recording)throw new Error("Recorder is not currently recording");this.#status="stopped";var e=()=>{this.#chunks=[],this.#recording=!1,this.#mediaRecorder.addEventListener("stop",async()=>{const e=new Blob(this.#chunks,{type:this.#mediaRecorder.mimeType});this.#audio=e;var i=()=>{this.#stopPromise.resolve(e),this.#stopPromise=void 0};this.#promiseSpeech?this.#promiseSpeech.then(i):this.#stopPromise&&i(),this.#recordingPromise&&(this.#recordingPromise.resolve(e),this.#recordingPromise=void 0),this.stopStream(),this.#mediaRecorder=void 0,this.#stream=void 0,this.#initPromise=void 0}),this.#mediaRecorder?.stop(),this.#speechRecognition?.stop(),this.trigger("change")};this.#initialised?e():this.record().then(e)}return this.#stopPromise}console.warn("this.#mediaRecorder no initialize")}}i.Recorder=r}}),n.set("./interface",{hash:939057662,creator:function(e,i){Object.defineProperty(i,"__esModule",{value:!0})}}),o.exports.descriptor=[{im:"./index",from:"Recorder",name:"Recorder"}],o.exports.process=function({require:e,prop:i,value:t}){!e&&"Recorder"!==i||r("Recorder",e?e("./index").Recorder:t)},r("__beyond_pkg",o),r("hmr",new function(){this.on=(e,i)=>o.hmr.on(e,i),this.off=(e,i)=>o.hmr.off(e,i)}),o.initialise(n)}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9pbmRleC50cyIsIi9pbnRlcmZhY2UudHMiXSwibmFtZXMiOlsiX2NvcmUiLCJyZXF1aXJlIiwiUmVjb3JkZXIiLCJSZWFjdGl2ZU1vZGVsIiwiI2luaXRpYWxpc2VkIiwiI3NvdXJjZSIsIiNzdHJlYW0iLCIjc3RhcnRUaW1lIiwiI2luaXRQcm9taXNlIiwiI3N0b3BQcm9taXNlIiwiI2F1ZGlvQ29udGV4dCIsIiNyZWNvcmRpbmdQcm9taXNlIiwiI21lZGlhUmVjb3JkZXIiLCIjY2h1bmtzIiwiY2h1bmtzIiwidGhpcyIsIiNzdGF0dXMiLCJzdGF0dXMiLCIjcmVjb3JkaW5nIiwicmVjb3JkaW5nIiwiI2Vycm9yIiwiZXJyb3IiLCJ2YWxpZCIsIiNhdWRpbyIsImF1ZGlvIiwiI2FuYWx5c2VyIiwiYW5hbHlzZXIiLCIjc3BlZWNoUmVjb2duaXRpb24iLCIjdHJhbnNjcmlwdGlvbiIsInRyYW5zY3JpcHRpb24iLCIjcHJvbWlzZVNwZWVjaCIsIiNwZXJtaXNzaW9ucyIsIiNwZXJtaXNzaW9uT2JzZXJ2ZXIiLCIjcGVybWlzc2lvblN0YXRlIiwiY29uc3RydWN0b3IiLCJzdXBlciIsImluaXQiLCJoYXNQZXJtaXNzaW9ucyIsImF3YWl0IiwibmF2aWdhdG9yIiwibWVkaWFEZXZpY2VzIiwiZ2V0VXNlck1lZGlhIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJwZXJtaXNzaW9ucyIsInF1ZXJ5IiwibmFtZSIsInN0YXRlIiwib25jaGFuZ2UiLCIjb25DaGFuZ2VTdGF0dXMiLCJiaW5kIiwicmVhZHkiLCJ0cmlnZ2VyIiwiZ2V0U3BlZWNoUmVjb2duaXRpb24iLCJ3ZWJraXRTcGVlY2hSZWNvZ25pdGlvbiIsImxhbmciLCJjb250aW51b3VzIiwiaW50ZXJpbVJlc3VsdHMiLCJQZW5kaW5nUHJvbWlzZSIsIm9ucmVzdWx0IiwiZXZlbnQiLCJsZXQiLCJpbnRlcmltVHJhbnNjcmlwdCIsImZpbmFsVHJhbnNjcmlwdCIsImkiLCJyZXN1bHRJbmRleCIsInJlc3VsdHMiLCJsZW5ndGgiLCJpc0ZpbmFsIiwidHJhbnNjcmlwdCIsInJlc29sdmUiLCJvbmVycm9yIiwic3RhcnQiLCIjb25EYXRhQXZhaWxhYmxlIiwiZGF0YSIsInNpemUiLCJwdXNoIiwiI3N0YXJ0UmVjb3JkaW5nIiwic3RyZWFtIiwic3BlY3MiLCJNZWRpYVJlY29yZGVyIiwiZ2xvYmFsVGhpcyIsIkF1ZGlvQ29udGV4dCIsIndlYmtpdEF1ZGlvQ29udGV4dCIsImNyZWF0ZUFuYWx5c2VyIiwiY3JlYXRlTWVkaWFTdHJlYW1Tb3VyY2UiLCJjb25uZWN0Iiwic3BlZWNoUmVjb2duaXRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwiaW5pdGlhbGlzZSIsInRoZW4iLCJjYXRjaCIsIm1lc3NhZ2UiLCJyZWplY3QiLCJmaW5hbGx5IiwicmVjb3JkIiwiRXJyb3IiLCJzdG9wU3RyZWFtIiwiZ2V0VHJhY2tzIiwiZm9yRWFjaCIsInRyYWNrIiwic3RvcCIsImFzeW5jIiwiQmxvYiIsInR5cGUiLCJtaW1lVHlwZSIsIm9uRmluaXNoIiwidW5kZWZpbmVkIiwid2FybiIsImV4cG9ydHMiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIl0sIm1hcHBpbmdzIjoic2xCQUFBLElBQUFBLEVBQUFDLEVBQUEsd0JBQUEsUUFNTUMsVUFMTkQsRUFBQSwyQkFBQSxFQUt1QkUsY0FDdEJDLGFBQWUsQ0FBQSxFQUNmQyxRQUNBQyxRQUNBQyxXQUNBQyxhQUNBQyxhQUNBQyxjQUNBQyxrQkFDQUMsZUFFQUMsUUFBa0IsR0FDbEJDLGFBQ0MsT0FBT0MsS0FBS0YsT0FDYixDQUNBRyxRQUNBQyxhQUNDLE9BQU9GLEtBQUtDLE9BQ2IsQ0FFQUUsV0FBYSxDQUFBLEVBQ2JDLGdCQUNDLE9BQU9KLEtBQUtHLFVBQ2IsQ0FFQUUsT0FDQUMsWUFDQyxPQUFPTixLQUFLSyxNQUNiLENBRUFFLFlBQ0MsTUFBTyxDQUFDUCxLQUFLSyxNQUNkLENBRUFHLE9BQ0FDLFlBQ0MsT0FBT1QsS0FBS1EsTUFDYixDQUVBRSxVQUNBQyxlQUND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